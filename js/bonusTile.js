// bonusTile.js - Qu·∫£n l√Ω √¥ l·∫ª (bonus tile) trong game Pikachu

import { increaseScore } from './gameState.js';

let bonusTileId = null; // ID c·ªßa √¥ l·∫ª hi·ªán t·∫°i (ƒë·ªÉ ki·ªÉm tra khi click)

/**
 * G√°n ng·∫´u nhi√™n m·ªôt √¥ trong grid l√† √¥ l·∫ª (bonus)
 * @param {Array} grid - M·∫£ng c√°c tile (gridData)
 */
export function setBonusTile(grid) {
  const gridSize = grid.length;
  const randomIndex = Math.floor(Math.random() * gridSize);

  bonusTileId = grid[randomIndex].id;
  grid[randomIndex].isBonus = true;

  console.log(`üéØ BonusTile ID: ${bonusTileId}`);
}

/**
 * Ki·ªÉm tra n·∫øu ng∆∞·ªùi ch∆°i click ƒë√∫ng √¥ l·∫ª
 * @param {HTMLElement} selectedTile - tile DOM ƒë∆∞·ª£c click
 */
export function handleBonusTileSelection(selectedTile) {
  if (selectedTile.id === bonusTileId) {
    increaseScore(100);
    selectedTile.classList.add('matched'); // ho·∫∑c 'completed' n·∫øu b·∫°n mu·ªën
    bonusTileId = null; // reset sau khi ch·ªçn ƒë√∫ng
    console.log('‚úÖ ƒê√£ ch·ªçn ƒë√∫ng √¥ l·∫ª!');
    return true;
  }

  return false;
}

/**
 * L·∫•y ID c·ªßa √¥ l·∫ª hi·ªán t·∫°i (n·∫øu c·∫ßn d√πng b√™n ngo√†i)
 */
export function getBonusTileId() {
  return bonusTileId;
}
